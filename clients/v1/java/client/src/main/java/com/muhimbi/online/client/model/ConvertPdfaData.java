/*
 * Muhimbi PDF
 * Convert, Merge, Watermark, Secure and OCR files.
 *
 * OpenAPI spec version: 9.16
 * Contact: support@muhimbi.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.muhimbi.online.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.muhimbi.online.client.model.SharepointFile;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Parameters for Convert PDF operation
 */
@ApiModel(description = "Parameters for Convert PDF operation")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-05-17T15:20:03.344+01:00")
public class ConvertPdfaData {
  @SerializedName("use_async_pattern")
  private Boolean useAsyncPattern = false;

  @SerializedName("source_file_name")
  private String sourceFileName = null;

  @SerializedName("sharepoint_file")
  private SharepointFile sharepointFile = null;

  @SerializedName("source_file_content")
  private String sourceFileContent = null;

  @SerializedName("copy_metadata")
  private Boolean copyMetadata = false;

  /**
   * PDF profile to use for rendering the document
   */
  public enum PdfProfileEnum {
    @SerializedName("Default")
    DEFAULT("Default"),
    
    @SerializedName("PDF_1_5")
    PDF_1_5("PDF_1_5"),
    
    @SerializedName("PDF_A1B")
    PDF_A1B("PDF_A1B"),
    
    @SerializedName("PDF_A2B")
    PDF_A2B("PDF_A2B"),
    
    @SerializedName("PDF_A2U")
    PDF_A2U("PDF_A2U"),
    
    @SerializedName("PDF_A3B")
    PDF_A3B("PDF_A3B"),
    
    @SerializedName("PDF_A3U")
    PDF_A3U("PDF_A3U"),
    
    @SerializedName("PDF_1_1")
    PDF_1_1("PDF_1_1"),
    
    @SerializedName("PDF_1_2")
    PDF_1_2("PDF_1_2"),
    
    @SerializedName("PDF_1_3")
    PDF_1_3("PDF_1_3"),
    
    @SerializedName("PDF_1_4")
    PDF_1_4("PDF_1_4"),
    
    @SerializedName("PDF_1_6")
    PDF_1_6("PDF_1_6"),
    
    @SerializedName("PDF_1_7")
    PDF_1_7("PDF_1_7");

    private String value;

    PdfProfileEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("pdf_profile")
  private PdfProfileEnum pdfProfile = PdfProfileEnum.PDF_A2B;

  @SerializedName("override_settings")
  private String overrideSettings = null;

  @SerializedName("fail_on_error")
  private Boolean failOnError = true;

  public ConvertPdfaData useAsyncPattern(Boolean useAsyncPattern) {
    this.useAsyncPattern = useAsyncPattern;
    return this;
  }

   /**
   * Use async behaviour for API request
   * @return useAsyncPattern
  **/
  @ApiModelProperty(example = "null", required = true, value = "Use async behaviour for API request")
  public Boolean getUseAsyncPattern() {
    return useAsyncPattern;
  }

  public void setUseAsyncPattern(Boolean useAsyncPattern) {
    this.useAsyncPattern = useAsyncPattern;
  }

  public ConvertPdfaData sourceFileName(String sourceFileName) {
    this.sourceFileName = sourceFileName;
    return this;
  }

   /**
   * Name of the source file including extension
   * @return sourceFileName
  **/
  @ApiModelProperty(example = "null", required = true, value = "Name of the source file including extension")
  public String getSourceFileName() {
    return sourceFileName;
  }

  public void setSourceFileName(String sourceFileName) {
    this.sourceFileName = sourceFileName;
  }

  public ConvertPdfaData sharepointFile(SharepointFile sharepointFile) {
    this.sharepointFile = sharepointFile;
    return this;
  }

   /**
   * Get sharepointFile
   * @return sharepointFile
  **/
  @ApiModelProperty(example = "null", value = "")
  public SharepointFile getSharepointFile() {
    return sharepointFile;
  }

  public void setSharepointFile(SharepointFile sharepointFile) {
    this.sharepointFile = sharepointFile;
  }

  public ConvertPdfaData sourceFileContent(String sourceFileContent) {
    this.sourceFileContent = sourceFileContent;
    return this;
  }

   /**
   * Content of the file to convert
   * @return sourceFileContent
  **/
  @ApiModelProperty(example = "null", required = true, value = "Content of the file to convert")
  public String getSourceFileContent() {
    return sourceFileContent;
  }

  public void setSourceFileContent(String sourceFileContent) {
    this.sourceFileContent = sourceFileContent;
  }

  public ConvertPdfaData copyMetadata(Boolean copyMetadata) {
    this.copyMetadata = copyMetadata;
    return this;
  }

   /**
   * Copy metadata (Only for SharePoint operations)
   * @return copyMetadata
  **/
  @ApiModelProperty(example = "null", required = true, value = "Copy metadata (Only for SharePoint operations)")
  public Boolean getCopyMetadata() {
    return copyMetadata;
  }

  public void setCopyMetadata(Boolean copyMetadata) {
    this.copyMetadata = copyMetadata;
  }

  public ConvertPdfaData pdfProfile(PdfProfileEnum pdfProfile) {
    this.pdfProfile = pdfProfile;
    return this;
  }

   /**
   * PDF profile to use for rendering the document
   * @return pdfProfile
  **/
  @ApiModelProperty(example = "null", required = true, value = "PDF profile to use for rendering the document")
  public PdfProfileEnum getPdfProfile() {
    return pdfProfile;
  }

  public void setPdfProfile(PdfProfileEnum pdfProfile) {
    this.pdfProfile = pdfProfile;
  }

  public ConvertPdfaData overrideSettings(String overrideSettings) {
    this.overrideSettings = overrideSettings;
    return this;
  }

   /**
   * Optional settings using Muhimbi's XML syntax
   * @return overrideSettings
  **/
  @ApiModelProperty(example = "null", value = "Optional settings using Muhimbi's XML syntax")
  public String getOverrideSettings() {
    return overrideSettings;
  }

  public void setOverrideSettings(String overrideSettings) {
    this.overrideSettings = overrideSettings;
  }

  public ConvertPdfaData failOnError(Boolean failOnError) {
    this.failOnError = failOnError;
    return this;
  }

   /**
   * Fail on error
   * @return failOnError
  **/
  @ApiModelProperty(example = "null", value = "Fail on error")
  public Boolean getFailOnError() {
    return failOnError;
  }

  public void setFailOnError(Boolean failOnError) {
    this.failOnError = failOnError;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertPdfaData convertPdfaData = (ConvertPdfaData) o;
    return Objects.equals(this.useAsyncPattern, convertPdfaData.useAsyncPattern) &&
        Objects.equals(this.sourceFileName, convertPdfaData.sourceFileName) &&
        Objects.equals(this.sharepointFile, convertPdfaData.sharepointFile) &&
        Objects.equals(this.sourceFileContent, convertPdfaData.sourceFileContent) &&
        Objects.equals(this.copyMetadata, convertPdfaData.copyMetadata) &&
        Objects.equals(this.pdfProfile, convertPdfaData.pdfProfile) &&
        Objects.equals(this.overrideSettings, convertPdfaData.overrideSettings) &&
        Objects.equals(this.failOnError, convertPdfaData.failOnError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useAsyncPattern, sourceFileName, sharepointFile, sourceFileContent, copyMetadata, pdfProfile, overrideSettings, failOnError);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertPdfaData {\n");
    
    sb.append("    useAsyncPattern: ").append(toIndentedString(useAsyncPattern)).append("\n");
    sb.append("    sourceFileName: ").append(toIndentedString(sourceFileName)).append("\n");
    sb.append("    sharepointFile: ").append(toIndentedString(sharepointFile)).append("\n");
    sb.append("    sourceFileContent: ").append(toIndentedString(sourceFileContent)).append("\n");
    sb.append("    copyMetadata: ").append(toIndentedString(copyMetadata)).append("\n");
    sb.append("    pdfProfile: ").append(toIndentedString(pdfProfile)).append("\n");
    sb.append("    overrideSettings: ").append(toIndentedString(overrideSettings)).append("\n");
    sb.append("    failOnError: ").append(toIndentedString(failOnError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

